desc:sd_delay

// Adapted from Cockos' JSFX Delay

slider1:type=0<0,1,1{Mono,Stereo}>Type
slider2:lengthMsL=120<0,2000,0.1>Delay L / Mono (ms)
slider3:lengthMsR=120<0,2000,0.1>Delay R (ms)
slider4:feedbackPercent=0<0,100,0.1>Feedback (%)
slider5:mixDb=-6<-120,6,1>Mix (dB)

in_pin:Left In
in_pin:Right In
out_pin:Left Out
out_pin:Right Out

@init
bufferPosL = 0;

@slider
type == 0 ? (
    lengthMsR = lengthMsL;
    numSamplesL = min(lengthMsL * srate / 1000, 500000);
    numSamplesR = min(lengthMsL * srate / 1000, 500000);
) : (
    numSamplesL = min(lengthMsL * srate / 1000, 500000);
    numSamplesR = min(lengthMsR * srate / 1000, 500000);
);

feedback = feedbackPercent / 100;
mix = 2 ^ ( mixDb / 6 );

@sample
type == 0 ? (
    // Mono
    samplesL = bufferPosL * 2;
    samplesR = bufferPosL * 2;
) : (
    // Stereo
    samplesL = bufferPosL * 2;
    samplesR = bufferPosR * 2;
);

bufferValueL = samplesL[0];
bufferValueR = samplesR[0];

samplesL[0] = min(spl0 + bufferValueL * feedback, 1);
samplesR[0] = min(spl1 + bufferValueR * feedback, 1);

(bufferPosL += 1) >= numSamplesL ? bufferPosL = 0;
(bufferPosR += 1) >= numSamplesR ? bufferPosR = 0;

spl0 = spl0 + bufferValueL * mix;
spl1 = spl1 + bufferValueR * mix;
